"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/create-emotion";
exports.ids = ["vendor-chunks/create-emotion"];
exports.modules = {

/***/ "(ssr)/./node_modules/create-emotion/dist/create-emotion.esm.js":
/*!****************************************************************!*\
  !*** ./node_modules/create-emotion/dist/create-emotion.esm.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _emotion_cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/cache */ \"(ssr)/./node_modules/@emotion/cache/dist/cache.esm.js\");\n/* harmony import */ var _emotion_serialize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/serialize */ \"(ssr)/./node_modules/@emotion/serialize/dist/serialize.esm.js\");\n/* harmony import */ var _emotion_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/utils */ \"(ssr)/./node_modules/@emotion/utils/dist/utils.esm.js\");\n\n\n\nfunction insertWithoutScoping(cache, serialized) {\n    if (cache.inserted[serialized.name] === undefined) {\n        return cache.insert(\"\", serialized, cache.sheet, true);\n    }\n}\nfunction merge(registered, css, className) {\n    var registeredStyles = [];\n    var rawClassName = (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_2__.getRegisteredStyles)(registered, registeredStyles, className);\n    if (registeredStyles.length < 2) {\n        return className;\n    }\n    return rawClassName + css(registeredStyles);\n}\nvar createEmotion = function createEmotion(options) {\n    var cache = (0,_emotion_cache__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(options); // $FlowFixMe\n    cache.sheet.speedy = function(value) {\n        if ( true && this.ctr !== 0) {\n            throw new Error(\"speedy must be changed before any rules are inserted\");\n        }\n        this.isSpeedy = value;\n    };\n    cache.compat = true;\n    var css = function css() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        var serialized = (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_1__.serializeStyles)(args, cache.registered, undefined);\n        (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_2__.insertStyles)(cache, serialized, false);\n        return cache.key + \"-\" + serialized.name;\n    };\n    var keyframes = function keyframes() {\n        for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++){\n            args[_key2] = arguments[_key2];\n        }\n        var serialized = (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_1__.serializeStyles)(args, cache.registered);\n        var animation = \"animation-\" + serialized.name;\n        insertWithoutScoping(cache, {\n            name: serialized.name,\n            styles: \"@keyframes \" + animation + \"{\" + serialized.styles + \"}\"\n        });\n        return animation;\n    };\n    var injectGlobal = function injectGlobal() {\n        for(var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++){\n            args[_key3] = arguments[_key3];\n        }\n        var serialized = (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_1__.serializeStyles)(args, cache.registered);\n        insertWithoutScoping(cache, serialized);\n    };\n    var cx = function cx() {\n        for(var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++){\n            args[_key4] = arguments[_key4];\n        }\n        return merge(cache.registered, css, classnames(args));\n    };\n    return {\n        css: css,\n        cx: cx,\n        injectGlobal: injectGlobal,\n        keyframes: keyframes,\n        hydrate: function hydrate(ids) {\n            ids.forEach(function(key) {\n                cache.inserted[key] = true;\n            });\n        },\n        flush: function flush() {\n            cache.registered = {};\n            cache.inserted = {};\n            cache.sheet.flush();\n        },\n        // $FlowFixMe\n        sheet: cache.sheet,\n        cache: cache,\n        getRegisteredStyles: _emotion_utils__WEBPACK_IMPORTED_MODULE_2__.getRegisteredStyles.bind(null, cache.registered),\n        merge: merge.bind(null, cache.registered, css)\n    };\n};\nvar classnames = function classnames(args) {\n    var cls = \"\";\n    for(var i = 0; i < args.length; i++){\n        var arg = args[i];\n        if (arg == null) continue;\n        var toAdd = void 0;\n        switch(typeof arg){\n            case \"boolean\":\n                break;\n            case \"object\":\n                {\n                    if (Array.isArray(arg)) {\n                        toAdd = classnames(arg);\n                    } else {\n                        toAdd = \"\";\n                        for(var k in arg){\n                            if (arg[k] && k) {\n                                toAdd && (toAdd += \" \");\n                                toAdd += k;\n                            }\n                        }\n                    }\n                    break;\n                }\n            default:\n                {\n                    toAdd = arg;\n                }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createEmotion);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/create-emotion/dist/create-emotion.esm.js\n");

/***/ })

};
;