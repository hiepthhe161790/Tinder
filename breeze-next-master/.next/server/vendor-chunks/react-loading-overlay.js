"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-loading-overlay";
exports.ids = ["vendor-chunks/react-loading-overlay"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-loading-overlay/lib/LoadingOverlay.js":
/*!******************************************************************!*\
  !*** ./node_modules/react-loading-overlay/lib/LoadingOverlay.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\"));\nvar _reactTransitionGroup = __webpack_require__(/*! react-transition-group */ \"(ssr)/./node_modules/react-transition-group/index.js\");\nvar _emotion = __webpack_require__(/*! emotion */ \"(ssr)/./node_modules/emotion/dist/emotion.esm.js\");\nvar _Spinner = _interopRequireDefault(__webpack_require__(/*! ./components/Spinner */ \"(ssr)/./node_modules/react-loading-overlay/lib/components/Spinner.js\"));\nvar _styles = _interopRequireDefault(__webpack_require__(/*! ./styles */ \"(ssr)/./node_modules/react-loading-overlay/lib/styles.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};\n        if (obj != null) {\n            for(var key in obj){\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n                    if (desc.get || desc.set) {\n                        Object.defineProperty(newObj, key, desc);\n                    } else {\n                        newObj[key] = obj[key];\n                    }\n                }\n            }\n        }\n        newObj.default = obj;\n        return newObj;\n    }\n}\nfunction _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n        _typeof = function _typeof(obj) {\n            return typeof obj;\n        };\n    } else {\n        _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n        };\n    }\n    return _typeof(obj);\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\nfunction _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n        for(var i = 0, arr2 = new Array(arr.length); i < arr.length; i++){\n            arr2[i] = arr[i];\n        }\n        return arr2;\n    }\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nvar LoadingOverlayWrapper = /*#__PURE__*/ function(_Component) {\n    _inherits(LoadingOverlayWrapper, _Component);\n    function LoadingOverlayWrapper(props) {\n        var _this;\n        _classCallCheck(this, LoadingOverlayWrapper);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(LoadingOverlayWrapper).call(this, props));\n        _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getStyles\", function(key, providedState) {\n            var base = _styles.default[key](providedState, _this.props);\n            var custom = _this.props.styles[key];\n            if (!custom) return base;\n            return typeof custom === \"function\" ? custom(base, _this.props) : custom;\n        });\n        _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"cx\", function(names) {\n            var arr = Array.isArray(names) ? names : [\n                names\n            ];\n            for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n                args[_key - 1] = arguments[_key];\n            }\n            return _emotion.cx.apply(void 0, _toConsumableArray(arr.map(function(name) {\n                return name ? \"\".concat(_this.props.classNamePrefix).concat(name) : \"\";\n            })).concat(args));\n        });\n        _this.wrapper = _react.default.createRef();\n        _this.state = {\n            overflowCSS: {}\n        };\n        return _this;\n    }\n    _createClass(LoadingOverlayWrapper, [\n        {\n            key: \"componentDidMount\",\n            value: function componentDidMount() {\n                var wrapperStyle = window.getComputedStyle(this.wrapper.current);\n                var overflowCSS = [\n                    \"overflow\",\n                    \"overflowX\",\n                    \"overflowY\"\n                ].reduce(function(m, i) {\n                    if (wrapperStyle[i] !== \"visible\") m[i] = \"hidden\";\n                    return m;\n                }, {});\n                this.setState({\n                    overflowCSS: overflowCSS\n                });\n            }\n        },\n        {\n            key: \"componentDidUpdate\",\n            value: function componentDidUpdate(prevProps) {\n                var active = this.props.active;\n                if (active) this.wrapper.current.scrollTop = 0;\n            }\n        },\n        {\n            key: \"render\",\n            value: function render() {\n                var _this2 = this;\n                var overflowCSS = this.state.overflowCSS;\n                var _this$props = this.props, children = _this$props.children, className = _this$props.className, onClick = _this$props.onClick, active = _this$props.active, fadeSpeed = _this$props.fadeSpeed, spinner = _this$props.spinner, text = _this$props.text;\n                return _react.default.createElement(\"div\", {\n                    \"data-testid\": \"wrapper\",\n                    ref: this.wrapper,\n                    className: this.cx([\n                        \"wrapper\",\n                        active && \"wrapper--active\"\n                    ], (0, _emotion.css)(this.getStyles(\"wrapper\", active ? overflowCSS : {})), className)\n                }, _react.default.createElement(_reactTransitionGroup.CSSTransition, {\n                    in: active,\n                    classNames: \"_loading-overlay-transition\",\n                    timeout: fadeSpeed,\n                    unmountOnExit: true\n                }, function(state) {\n                    return _react.default.createElement(\"div\", {\n                        \"data-testid\": \"overlay\",\n                        className: _this2.cx(\"overlay\", (0, _emotion.css)(_this2.getStyles(\"overlay\", state))),\n                        onClick: onClick\n                    }, _react.default.createElement(\"div\", {\n                        className: _this2.cx(\"content\", (0, _emotion.css)(_this2.getStyles(\"content\")))\n                    }, spinner && (typeof spinner === \"boolean\" ? _react.default.createElement(_Spinner.default, {\n                        cx: _this2.cx,\n                        getStyles: _this2.getStyles\n                    }) : spinner), text));\n                }), children);\n            }\n        }\n    ]);\n    return LoadingOverlayWrapper;\n}(_react.Component);\nLoadingOverlayWrapper.propTypes = {\n    active: _propTypes.default.bool,\n    fadeSpeed: _propTypes.default.number,\n    onClick: _propTypes.default.func,\n    className: _propTypes.default.string,\n    classNamePrefix: _propTypes.default.string,\n    spinner: _propTypes.default.oneOfType([\n        _propTypes.default.bool,\n        _propTypes.default.node\n    ]),\n    text: _propTypes.default.node,\n    styles: _propTypes.default.shape({\n        content: _propTypes.default.function,\n        overlay: _propTypes.default.function,\n        spinner: _propTypes.default.function,\n        wrapper: _propTypes.default.function\n    })\n};\nLoadingOverlayWrapper.defaultProps = {\n    classNamePrefix: \"_loading_overlay_\",\n    fadeSpeed: 500,\n    styles: {}\n};\nvar _default = LoadingOverlayWrapper;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-loading-overlay/lib/LoadingOverlay.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-loading-overlay/lib/components/Spinner.js":
/*!**********************************************************************!*\
  !*** ./node_modules/react-loading-overlay/lib/components/Spinner.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\"));\nvar _emotion = __webpack_require__(/*! emotion */ \"(ssr)/./node_modules/emotion/dist/emotion.esm.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nvar Spinner = function Spinner(_ref) {\n    var getStyles = _ref.getStyles, cx = _ref.cx;\n    return _react.default.createElement(\"div\", {\n        className: cx(\"spinner\", (0, _emotion.css)(getStyles(\"spinner\")))\n    }, _react.default.createElement(\"svg\", {\n        viewBox: \"25 25 50 50\"\n    }, _react.default.createElement(\"circle\", {\n        cx: \"50\",\n        cy: \"50\",\n        r: \"20\",\n        fill: \"none\",\n        strokeWidth: \"2\",\n        strokeMiterlimit: \"10\"\n    })));\n};\nSpinner.propTypes = {\n    getStyles: _propTypes.default.func.isRequired,\n    cx: _propTypes.default.func.isRequired\n};\nvar _default = Spinner;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtbG9hZGluZy1vdmVybGF5L2xpYi9jb21wb25lbnRzL1NwaW5uZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlLEdBQUcsS0FBSztBQUV2QixJQUFJRyxTQUFTQyx1QkFBdUJDLG1CQUFPQSxDQUFDLHdHQUFPO0FBRW5ELElBQUlDLGFBQWFGLHVCQUF1QkMsbUJBQU9BLENBQUMsNERBQVk7QUFFNUQsSUFBSUUsV0FBV0YsbUJBQU9BLENBQUMsaUVBQVM7QUFFaEMsU0FBU0QsdUJBQXVCSSxHQUFHO0lBQUksT0FBT0EsT0FBT0EsSUFBSUMsVUFBVSxHQUFHRCxNQUFNO1FBQUVOLFNBQVNNO0lBQUk7QUFBRztBQUU5RixJQUFJRSxVQUFVLFNBQVNBLFFBQVFDLElBQUk7SUFDakMsSUFBSUMsWUFBWUQsS0FBS0MsU0FBUyxFQUMxQkMsS0FBS0YsS0FBS0UsRUFBRTtJQUNoQixPQUFPVixPQUFPRCxPQUFPLENBQUNZLGFBQWEsQ0FBQyxPQUFPO1FBQ3pDQyxXQUFXRixHQUFHLFdBQVcsQ0FBQyxHQUFHTixTQUFTUyxHQUFHLEVBQUVKLFVBQVU7SUFDdkQsR0FBR1QsT0FBT0QsT0FBTyxDQUFDWSxhQUFhLENBQUMsT0FBTztRQUNyQ0csU0FBUztJQUNYLEdBQUdkLE9BQU9ELE9BQU8sQ0FBQ1ksYUFBYSxDQUFDLFVBQVU7UUFDeENELElBQUk7UUFDSkssSUFBSTtRQUNKQyxHQUFHO1FBQ0hDLE1BQU07UUFDTkMsYUFBYTtRQUNiQyxrQkFBa0I7SUFDcEI7QUFDRjtBQUVBWixRQUFRYSxTQUFTLEdBQUc7SUFDbEJYLFdBQVdOLFdBQVdKLE9BQU8sQ0FBQ3NCLElBQUksQ0FBQ0MsVUFBVTtJQUM3Q1osSUFBSVAsV0FBV0osT0FBTyxDQUFDc0IsSUFBSSxDQUFDQyxVQUFVO0FBQ3hDO0FBQ0EsSUFBSUMsV0FBV2hCO0FBQ2ZWLGtCQUFlLEdBQUcwQiIsInNvdXJjZXMiOlsid2VicGFjazovL2JyZWV6ZS1uZXh0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LWxvYWRpbmctb3ZlcmxheS9saWIvY29tcG9uZW50cy9TcGlubmVyLmpzPzNlMTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5cbnZhciBfcHJvcFR5cGVzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwicHJvcC10eXBlc1wiKSk7XG5cbnZhciBfZW1vdGlvbiA9IHJlcXVpcmUoXCJlbW90aW9uXCIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgU3Bpbm5lciA9IGZ1bmN0aW9uIFNwaW5uZXIoX3JlZikge1xuICB2YXIgZ2V0U3R5bGVzID0gX3JlZi5nZXRTdHlsZXMsXG4gICAgICBjeCA9IF9yZWYuY3g7XG4gIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IGN4KCdzcGlubmVyJywgKDAsIF9lbW90aW9uLmNzcykoZ2V0U3R5bGVzKCdzcGlubmVyJykpKVxuICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIHtcbiAgICB2aWV3Qm94OiBcIjI1IDI1IDUwIDUwXCJcbiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImNpcmNsZVwiLCB7XG4gICAgY3g6IFwiNTBcIixcbiAgICBjeTogXCI1MFwiLFxuICAgIHI6IFwiMjBcIixcbiAgICBmaWxsOiBcIm5vbmVcIixcbiAgICBzdHJva2VXaWR0aDogXCIyXCIsXG4gICAgc3Ryb2tlTWl0ZXJsaW1pdDogXCIxMFwiXG4gIH0pKSk7XG59O1xuXG5TcGlubmVyLnByb3BUeXBlcyA9IHtcbiAgZ2V0U3R5bGVzOiBfcHJvcFR5cGVzLmRlZmF1bHQuZnVuYy5pc1JlcXVpcmVkLFxuICBjeDogX3Byb3BUeXBlcy5kZWZhdWx0LmZ1bmMuaXNSZXF1aXJlZFxufTtcbnZhciBfZGVmYXVsdCA9IFNwaW5uZXI7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwiX3JlYWN0IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfcHJvcFR5cGVzIiwiX2Vtb3Rpb24iLCJvYmoiLCJfX2VzTW9kdWxlIiwiU3Bpbm5lciIsIl9yZWYiLCJnZXRTdHlsZXMiLCJjeCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJjc3MiLCJ2aWV3Qm94IiwiY3kiLCJyIiwiZmlsbCIsInN0cm9rZVdpZHRoIiwic3Ryb2tlTWl0ZXJsaW1pdCIsInByb3BUeXBlcyIsImZ1bmMiLCJpc1JlcXVpcmVkIiwiX2RlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-loading-overlay/lib/components/Spinner.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-loading-overlay/lib/styles.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-loading-overlay/lib/styles.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar _emotion = __webpack_require__(/*! emotion */ \"(ssr)/./node_modules/emotion/dist/emotion.esm.js\");\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _templateObject2() {\n    var data = _taggedTemplateLiteral([\n        \"\\n  0% {\\n    stroke-dasharray: 1,200;\\n    stroke-dashoffset: 0;\\n  }\\n  50% {\\n    stroke-dasharray: 89,200;\\n    stroke-dashoffset: -35px;\\n  }\\n  100% {\\n    stroke-dasharray: 89,200;\\n    stroke-dashoffset: -124px;\\n  }\\n\"\n    ]);\n    _templateObject2 = function _templateObject2() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject() {\n    var data = _taggedTemplateLiteral([\n        \"\\n  from {\\n    transform: rotate(0deg);\\n  }\\n  to {\\n    transform: rotate(360deg);\\n  }\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _taggedTemplateLiteral(strings, raw) {\n    if (!raw) {\n        raw = strings.slice(0);\n    }\n    return Object.freeze(Object.defineProperties(strings, {\n        raw: {\n            value: Object.freeze(raw)\n        }\n    }));\n}\nvar rotate360 = (0, _emotion.keyframes)(_templateObject());\nvar spinnerDash = (0, _emotion.keyframes)(_templateObject2());\nvar _default = {\n    wrapper: function wrapper(state) {\n        return _objectSpread({\n            position: \"relative\"\n        }, state);\n    },\n    overlay: function overlay(state, props) {\n        return {\n            position: \"absolute\",\n            height: \"100%\",\n            width: \"100%\",\n            top: \"0px\",\n            left: \"0px\",\n            display: \"flex\",\n            textAlign: \"center\",\n            fontSize: \"1.2em\",\n            color: \"#FFF\",\n            background: \"rgba(0, 0, 0, 0.7)\",\n            zIndex: 800,\n            transition: \"opacity \".concat(props.fadeSpeed, \"ms ease-in\"),\n            opacity: state === \"entering\" || state === \"entered\" ? 1 : 0\n        };\n    },\n    content: function content() {\n        return {\n            margin: \"auto\"\n        };\n    },\n    spinner: function spinner(state) {\n        return {\n            position: \"relative\",\n            margin: \"0px auto 10px auto\",\n            width: \"50px\",\n            maxHeight: \"100%\",\n            \"&:before\": {\n                content: '\"\"',\n                display: \"block\",\n                paddingTop: \"100%\"\n            },\n            \"& svg\": {\n                animation: \"\".concat(rotate360, \" 2s linear infinite\"),\n                height: \"100%\",\n                transformOrigin: \"center center\",\n                width: \"100%\",\n                position: \"absolute\",\n                top: \"0\",\n                bottom: \"0\",\n                left: \"0\",\n                right: \"0\",\n                margin: \"auto\",\n                \"& circle\": {\n                    animation: \"\".concat(spinnerDash, \" 1.5s ease-in-out infinite\"),\n                    strokeDasharray: \"1,200\",\n                    strokeDashoffset: 0,\n                    strokeLinecap: \"round\",\n                    stroke: \"#FFF\"\n                }\n            }\n        };\n    }\n};\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-loading-overlay/lib/styles.js\n");

/***/ })

};
;